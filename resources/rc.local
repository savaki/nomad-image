#!/bin/bash

export LOCAL_IPV4=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)
export AWS_INSTANCE_ID=$(curl -s http://169.254.169.254/latest/meta-data/instance-id)
export AWS_AVAILABILITY_ZONE=$(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)
export AWS_REGION=$(echo ${AWS_AVAILABILITY_ZONE} | sed 's/[a-z]$//')

export NOMAD_DATACENTER=${AWS_AVAILABILITY_ZONE}
export NOMAD_REGION=${AWS_REGION}
export NOMAD_ROLE=client

mkdir -p /etc/nomad/db

# read env from user-data
#
curl -s -o /etc/nomad/nomad.env http://169.254.169.254/latest/user-data
if ! grep -q DOCTYPE /etc/nomad/nomad.env ; then
  source /etc/nomad/nomad.env
fi

# --[ generate nomad.hcl ]------------------------------------------------------------------------

cat <<EOF > /etc/nomad/nomad.hcl
# set the region
datacenter = "${NOMAD_DATACENTER}"

# set the data center
region = "${NOMAD_REGION}"

# set log verbosity
log_level = "INFO"

# setup the data dir
data_dir = "/etc/nomad/db"

# bind addresses
addresses {
  http = "0.0.0.0"
  rpc  = "0.0.0.0"
  serf = "0.0.0.0"
}

# advertise addresses
advertise {
  rpc  = "${LOCAL_IPV4}:4647"
  serf = "${LOCAL_IPV4}:4648"
}

EOF

if [ "${NOMAD_ROLE}" == "server" ] ; then
  cat <<EOF >> /etc/nomad/nomad.hcl

# enable server configuration
server {
  enabled = true
  bootstrap_expect = 3
}
EOF

else
  cat <<EOF >> /etc/nomad/nomad.hcl

# enable client configuration
client {
  enabled = true
}
EOF

fi

# --[ start nomad ]-------------------------------------------------------------------------------

nohup nomad agent -config=/etc/nomad/nomad.hcl &

